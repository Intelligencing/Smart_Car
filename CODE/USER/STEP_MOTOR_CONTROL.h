#ifndef STEP_MOTOR_CONTROL_H
#define STEP_MOTOR_CONTROL_H

#include "headfile.h"
#include "STEP_MOTOR.h"
#include "PID.h"

#define ERROR_RANGE 1
#define STEERING_Kp 1
#define STEERING_Ki 1
#define STEERING_Kd 1
#define STEP_MOTOR_MAX_DUTY 5000

PID STEP_MOTOR_PID;

typedef enum{
    OFF,
    ON
}STATUS_FLAG;

STATUS_FLAG FLAG;

void STEP_MOTOR_PID_INIT(){
    PID_INIT_NEWPID(&STEP_MOTOR_PID,STEERING_Kp,STEERING_Ki,STEERING_Kd,0,PID_REALIZE_MODE);
    FLAG = OFF;
}

void STEP_MOTOR_CONTROL(uint16 CURRENT_SPEED,uint16 TARGET_SPEED){
    if(CURRENT_SPEED>0 && FLAG == OFF) FLAG = ON;
    if (CURRENT_SPEED==0 && FLAG == ON || CURRENT_SPEED - TARGET_SPEED > ERROR_RANGE) {
        STEP_MOTOR_STOP();
    }
    else if(CURRENT_SPEED - TARGET_SPEED <ERROR_RANGE){
        STEP_MOTOR_FORWORD(STEP_MOTOR_MAX_DUTY);
    }
    else{
        PID_SET_TARGET(&STEP_MOTOR_PID,TARGET_SPEED);
        STEP_MOTOR_FORWORD(PID_CALC_RESULT(&STEP_MOTOR_PID,CURRENT_SPEED));
    }
}

#endif