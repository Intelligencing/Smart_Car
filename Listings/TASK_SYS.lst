C251 COMPILER V5.60.0,  TASK_SYS                                                           26/01/22  12:28:53  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE TASK_SYS
OBJECT MODULE PLACED IN .\Objects\TASK_SYS.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE CODE\USER\TASK_SYS.c LARGE INTR2 BROWSE INCDIR(.\CODE\ALGORITHM;.\CODE
                    -\DRIVER;.\CODE\Libraries\libraries;.\CODE\Libraries\seekfree_libraries;.\CODE\Libraries\seekfree_peripheral;.\CODE\USER)
                    - DEBUG PRINT(.\Listings\TASK_SYS.lst) TABS(2) OBJECT(.\Objects\TASK_SYS.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          #include "TASK_SYS.h"
    3          
    4          TASK* TaskList[TASK_MAX_N];
    5          
    6          void Task_Excute(TASK* task){
    7   1          if(task == 0) return;
    8   1          task->COUNTER++;
    9   1          task->COUNTER%=task->THRESHOLD;
   10   1          if(task->COUNTER==0) (*task->FUNC)();
   11   1      }
   12          
   13          void TASK_STATE_UPDATE(){
   14   1          int i;
   15   1          for(i=0;i<TASK_MAX_N;i++){
   16   2              Task_Excute(TaskList[i]);
   17   2          }
   18   1      }
   19          
   20          void TASK_INIT_TASKSYS(){
   21   1          lcd_clear(RED);
   22   1          lcd_clear(BLUE);
   23   1          SET_ISR_FUNC(TM1_interrupt,TASK_STATE_UPDATE);
   24   1          pit_timer_ms(TIM_1,1);
   25   1      }
   26          
   27          void TASK_INIT_NEWTASK(TASK* task,uint16 Threshold,void (*func)()){
   28   1          //memset(task,0,sizeof(task));
   29   1          task->COUNTER = 0;
   30   1          task->THRESHOLD = Threshold;
   31   1          task->FUNC = func;
   32   1      }
   33          
   34          void TASK_SETID(uint8 ID,TASK* task){
   35   1          task->ID=ID;
   36   1      }
   37          
   38          void TASK_SETFUNC(void (*func)(),TASK* task){
   39   1          task->FUNC=func;
   40   1      }
   41          
   42          void TASK_ADD_TASK(TASK* task){
   43   1          int i;
   44   1          for (i = 0; i < TASK_MAX_N; i++) {
   45   2              if(TaskList[i]==0){
   46   3                  TaskList[i]=task;
   47   3                  TASK_SETID(i,task);
*** WARNING C188 IN LINE 47 OF CODE\USER\TASK_SYS.c: 'parameter 1': value truncated
   48   3                  return ;
   49   3              }
   50   2          }
   51   1      }
   52          
   53          void TASK_DELETE_TASK(TASK* task){
   54   1          TaskList[task->ID]=0;
   55   1      }
   56          
C251 COMPILER V5.60.0,  TASK_SYS                                                           26/01/22  12:28:53  PAGE 2   

   57          void TASK_PAUSE_TASKSYS(){
   58   1      
   59   1      }
   60          
   61          void TASK_DEINIT_TASKSYS(){
   62   1          int i;
   63   1          for (i = 0; i < TASK_MAX_N; i++) {
   64   2              TaskList[i] = 0;
   65   2          }
   66   1      }
   67          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       275     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        16     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
