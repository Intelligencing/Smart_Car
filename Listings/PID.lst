C251 COMPILER V5.60.0,  PID                                                                06/03/22  11:40:00  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE PID
OBJECT MODULE PLACED IN .\Objects\PID.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE CODE\ALGORITHM\PID.c LARGE INTR2 BROWSE INCDIR(.\CODE\ALGORITHM;.\CODE
                    -\DRIVER;.\CODE\Libraries\libraries;.\CODE\Libraries\seekfree_libraries;.\CODE\Libraries\seekfree_peripheral;.\CODE\USER)
                    - DEBUG PRINT(.\Listings\PID.lst) TABS(2) OBJECT(.\Objects\PID.obj) 

stmt  level    source

    1          #include "PID.h"
    2          #include "stdio.h"
    3          
    4          void PID_SET_TARGET(PID* PID_CONTROL,float Param_Target){
    5   1          PID_CONTROL->TARGET_VALUE = Param_Target;
    6   1      }
    7          
    8          void PID_SET_FACTORS(PID* PID_CONTROL,float Param_P,float Param_I,float Param_D){
    9   1          PID_CONTROL->FACTOR_Proportional = Param_P;
   10   1          PID_CONTROL->FACTOR_Integral     = Param_I;
   11   1          PID_CONTROL->FACTOR_Differential = Param_D;
   12   1      }
   13          
   14          float PID_CALC_RESULT(PID* PID_CONTROL,float CURRENT_INPUT){
   15   1          float P , I , D;
   16   1          float PID_OUTPUT;
   17   1          float ERROR,d_ERROR;
   18   1          ERROR = PID_CONTROL->TARGET_VALUE - CURRENT_INPUT;
   19   1          PID_CONTROL->PID_SUM_ERROR += ERROR;
   20   1          if(PID_CONTROL->PID_X_MODE == PID_REALIZE_MODE){
   21   2              d_ERROR = PID_CONTROL->PID_LAST_ERROR - PID_CONTROL->PID_PREV_ERROR;
   22   2              P = PID_CONTROL->FACTOR_Proportional*ERROR;
   23   2              I = PID_CONTROL->FACTOR_Integral*PID_CONTROL->PID_SUM_ERROR;
   24   2              D = PID_CONTROL->FACTOR_Differential*d_ERROR;
   25   2          }else{
   26   2              d_ERROR = ERROR - 2*PID_CONTROL->PID_LAST_ERROR + PID_CONTROL->PID_PREV_ERROR;
   27   2              P = (ERROR-PID_CONTROL->PID_LAST_ERROR)*PID_CONTROL->FACTOR_Proportional;
   28   2              I = PID_CONTROL->FACTOR_Integral*ERROR;
   29   2              D = PID_CONTROL->FACTOR_Differential*d_ERROR;
   30   2          }
   31   1          PID_CONTROL->PID_PREV_ERROR = PID_CONTROL->PID_LAST_ERROR;
   32   1          PID_CONTROL->PID_LAST_ERROR = ERROR;
   33   1          PID_OUTPUT = P+I+D;
   34   1          return PID_OUTPUT;
   35   1      }
   36          
   37          void PID_INIT_NEWPID(PID* NEW_PID,float Param_P,float Param_I,float Param_D,float Param_Target,PID_CONTRO
             -L_MODE PID_MODE){
   38   1          NEW_PID->PID_X_MODE = PID_MODE;
   39   1          NEW_PID->PID_PREV_ERROR     = 0;
   40   1          NEW_PID->PID_LAST_ERROR     = 0;
   41   1          NEW_PID->PID_SUM_ERROR      = 0;
   42   1          PID_SET_FACTORS(NEW_PID,Param_P,Param_I,Param_D);
   43   1          PID_SET_TARGET(NEW_PID,Param_Target);
   44   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       435     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------         30
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
C251 COMPILER V5.60.0,  PID                                                                06/03/22  11:40:00  PAGE 2   

  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
