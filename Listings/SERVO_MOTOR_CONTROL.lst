C251 COMPILER V5.60.0,  SERVO_MOTOR_CONTROL                                                25/01/22  13:56:09  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SERVO_MOTOR_CONTROL
OBJECT MODULE PLACED IN .\Objects\SERVO_MOTOR_CONTROL.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE CODE\USER\SERVO_MOTOR_CONTROL.C LARGE INTR2 BROWSE INCDIR(.\CODE\ALGOR
                    -ITHM;.\CODE\DRIVER;.\CODE\Libraries\libraries;.\CODE\Libraries\seekfree_libraries;.\CODE\Libraries\seekfree_peripheral;.
                    -\CODE\USER) DEBUG PRINT(.\Listings\SERVO_MOTOR_CONTROL.lst) TABS(2) OBJECT(.\Objects\SERVO_MOTOR_CONTROL.obj) 

stmt  level    source

    1          #include "SERVO_MOTOR_CONTROL.h"
    2          #include"EM_Calc.h"
    3          #include "PID.h"
    4          #include "SERVO_MOTOR.h"
    5          #include "LCD_show.h"
    6          
    7          struct MySteeringPID_params MyParams[2];
    8          
    9          PID MySTEERING_PID;
   10          
   11          float ANGLE_ADAPTER(float WHEEL_ANGLE){
   12   1          float Steering_ANGLE;
   13   1          Steering_ANGLE = WHEEL_ANGLE*0.22;
   14   1          if(Steering_ANGLE>7) Steering_ANGLE = 7;
   15   1          if(Steering_ANGLE<-7) Steering_ANGLE = -7;
   16   1          return Steering_ANGLE;
   17   1      }
   18          
   19          void MySteeringPIDAdapter_State(SteeringState State){
   20   1          PID_SET_FACTORS(&MySTEERING_PID,MyParams[State].Kp,MyParams[State].Ki,MyParams[State].Kd);
   21   1      }
   22          
   23          void MySteeringControl_INIT(){
   24   1        SERVO_INIT_MOTOR();
   25   1          MyParams[0].Kp = STEERING_Kp_0;
   26   1          MyParams[0].Ki = STEERING_Ki_0;
   27   1          MyParams[0].Kd = STEERING_Kd_0;
   28   1          MyParams[1].Kp = STEERING_Kp_1;
   29   1          MyParams[1].Ki = STEERING_Ki_1;
   30   1          MyParams[1].Kd = STEERING_Kd_1;
   31   1          PID_INIT_NEWPID(&MySTEERING_PID,0,0,0,0,PID_INCREASE_MODE);
   32   1        MySteeringPIDAdapter_State(ON_STRAIGHT);
   33   1      }
   34          
   35          void MySteeringControl_TASK(float ANGLE){
   36   1          SERVO_SET_ANGLE(ANGLE_ADAPTER(ANGLE));//利用电磁信号计算舵机大致摆角（调用PIDadapter
             -算ERROR与目标值）
   37   1      }
   38          
   39          float MySteeringControl_GETANGLE(int* EM_DATA,int userAngle){
   40   1          float CURRENT_INPUT;
   41   1          float ANGLE;
   42   1          CURRENT_INPUT = EM_CALC_POS_RES(EM_DATA)*1000;//接收传入的已经滤波过的电磁信号
   43   1          if(userAngle == 0) 
   44   1              ANGLE = PID_CALC_RESULT(&MySTEERING_PID,CURRENT_INPUT);
   45   1          else 
   46   1              ANGLE = userAngle;
   47   1              return ANGLE;//返回摆角
   48   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       313     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
C251 COMPILER V5.60.0,  SERVO_MOTOR_CONTROL                                                25/01/22  13:56:09  PAGE 2   

  xdata size           =        42          4
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
