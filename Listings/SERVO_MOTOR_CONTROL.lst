C251 COMPILER V5.60.0,  SERVO_MOTOR_CONTROL                                                06/03/22  19:39:01  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SERVO_MOTOR_CONTROL
OBJECT MODULE PLACED IN .\Objects\SERVO_MOTOR_CONTROL.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE CODE\USER\SERVO_MOTOR_CONTROL.C LARGE INTR2 BROWSE INCDIR(.\CODE\ALGOR
                    -ITHM;.\CODE\DRIVER;.\CODE\Libraries\libraries;.\CODE\Libraries\seekfree_libraries;.\CODE\Libraries\seekfree_peripheral;.
                    -\CODE\USER) DEBUG PRINT(.\Listings\SERVO_MOTOR_CONTROL.lst) TABS(2) OBJECT(.\Objects\SERVO_MOTOR_CONTROL.obj) 

stmt  level    source

    1          #include "SERVO_MOTOR_CONTROL.h"
    2          #include "EM_Calc.h"
    3          #include "PID.h"
    4          #include "SERVO_MOTOR.h"
    5          #include "LCD_show.h"
    6          
    7          struct SteeringPID_params Params[4];
    8          float LAST_ERROR;
    9          PID STEERING_PID;
   10          
   11          float ANGLE_ADAPTER(float WHEEL_ANGLE){
   12   1          float Steering_ANGLE;
   13   1          Steering_ANGLE = WHEEL_ANGLE*0.23333;
   14   1          if(Steering_ANGLE>9) Steering_ANGLE = 9;
   15   1          if(Steering_ANGLE<-9) Steering_ANGLE = -9;
   16   1          return Steering_ANGLE;
   17   1      }
   18          
   19          void SteeringPID_State(SteeringState State){
   20   1          PID_SET_FACTORS(&STEERING_PID,Params[State].Kp,Params[State].Ki,Params[State].Kd);
   21   1      }
   22          
   23          void SteeringControl_INIT(){
   24   1        SERVO_INIT_MOTOR();
   25   1          Params[0].Kp = STEERING_Kp_0;
   26   1          Params[0].Ki = STEERING_Ki_0;
   27   1          Params[0].Kd = STEERING_Kd_0;
   28   1          Params[1].Kp = STEERING_Kp_1; 
   29   1          Params[1].Ki = STEERING_Ki_1;
   30   1          Params[1].Kd = STEERING_Kd_1;
   31   1          Params[2].Kp = STEERING_Kp_2; 
   32   1          Params[2].Ki = STEERING_Ki_2;
   33   1          Params[2].Kd = STEERING_Kd_2;
   34   1          Params[3].Kp = STEERING_Kp_3; 
   35   1          Params[3].Ki = STEERING_Ki_3;
   36   1          Params[3].Kd = STEERING_Kd_3;
   37   1          PID_INIT_NEWPID(&STEERING_PID,0,0,0,0,PID_REALIZE_MODE);
   38   1          SteeringPID_State(ON_STRAIGHT);
   39   1      }
   40          
   41          void SteeringControl(float ANGLE){
   42   1          SERVO_SET_ANGLE(ANGLE_ADAPTER(ANGLE));//利用电磁信号计算舵机大致摆角（调用PIDadapter
             -算ERROR与目标值）
   43   1      }
   44          
   45          float ANGLE_GETANGLE(int* EM_DATA,float userAngle,float Kp,float Ki,float Kd){
   46   1          float CURRENT_INPUT;
   47   1          float ANGLE;
   48   1      //    CURRENT_INPUT = 0;
   49   1      //    ANGLE = 0;
   50   1          CURRENT_INPUT = EM_CALC_POS_RES(EM_DATA);
   51   1          if(userAngle == 0){
   52   2              Ki+=-CURRENT_INPUT;
   53   2              //ANGLE = PID_CALC_RESULT(&STEERING_PID,CURRENT_INPUT); 
   54   2          ANGLE = -Kp*CURRENT_INPUT-Ki*CURRENT_INPUT+Kd*(-CURRENT_INPUT-LAST_ERROR);//
   55   2          LAST_ERROR = -CURRENT_INPUT;  
   56   2          }       
C251 COMPILER V5.60.0,  SERVO_MOTOR_CONTROL                                                06/03/22  19:39:01  PAGE 2   

   57   1          else 
   58   1              ANGLE = userAngle;//强制打角
   59   1              return ANGLE;//返回摆角
   60   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       497     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        82         16
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
