C251 COMPILER V5.60.0,  EM_FILTER                                                          24/01/22  20:36:13  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE EM_FILTER
OBJECT MODULE PLACED IN .\Objects\EM_FILTER.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE CODE\ALGORITHM\EM_FILTER.c LARGE INTR2 BROWSE INCDIR(.\CODE\ALGORITHM;
                    -.\CODE\DRIVER;.\CODE\Libraries\libraries;.\CODE\Libraries\seekfree_libraries;.\CODE\Libraries\seekfree_peripheral;.\CODE
                    -\USER) DEBUG PRINT(.\Listings\EM_FILTER.lst) TABS(2) OBJECT(.\Objects\EM_FILTER.obj) 

stmt  level    source

    1          /*
    2           * @Description  : 电磁滤波器实现
    3           * @Author       : FZU Liao
    4           * @Date         : 2022-01-08 18:23:10
    5           * @LastEditors  : Liao
    6           * @LastEditTime : 2022-01-09 22:24:26
    7           * @FilePath     : \TEMPLATE_PROJECT\CODES\ALGORITHM\EM_FILTER.c
    8           * Copyright 2022 FZU Liao, All Rights Reserved. 
    9           */
   10          
   11          #include "EM_FILTER.h"
   12          #include "COMMON.h"
   13          
   14          #define EM_MAX -100000
   15          #define EM_MIN  100000
   16          
   17          void EM_FILTER_INIT(EM_FILTER* FILTER){
   18   1          int index;
   19   1          FILTER->times = 0;
   20   1          for(index = 0 ; index<LIST_LENGTH ; index++){
   21   2              FILTER->FILTER_LIST[index] = 0;
   22   2              FILTER->MAX_LIST[index] = EM_MAX;
*** WARNING C188 IN LINE 22 OF CODE\ALGORITHM\EM_FILTER.c: 'constant': value truncated
   23   2              FILTER->MIN_LIST[index] = EM_MIN;
*** WARNING C188 IN LINE 23 OF CODE\ALGORITHM\EM_FILTER.c: 'constant': value truncated
   24   2          }
   25   1      }
   26          
   27          void EM_FILTER_ADD_SAMPLE(EM_FILTER* FILTER,int* DATA_SAMPLE_LIST){
   28   1          int index,temp;
   29   1          for(index=0;index<LIST_LENGTH;index++){
   30   2              temp = DATA_SAMPLE_LIST[index];
   31   2              if(temp>FILTER->MAX_RANGE) temp = FILTER->MAX_RANGE;
   32   2              if(temp<FILTER->MIN_RANGE) temp = FILTER->MIN_RANGE;
   33   2              FILTER->MAX_LIST[index] = FILTER->MAX_LIST[index]<temp ? temp : FILTER->MAX_LIST[index];
   34   2              FILTER->MIN_LIST[index] = FILTER->MIN_LIST[index]>temp ? temp : FILTER->MIN_LIST[index];
   35   2              FILTER->FILTER_LIST[index] += temp;
   36   2          }
   37   1          FILTER->times++;
   38   1      }
   39          
   40          void EM_FILTER_READ_RESULT(EM_FILTER* FILTER,int* RES_SET){
   41   1          int index;
   42   1          for(index=0;index<LIST_LENGTH;index++){
   43   2              if(FILTER->times>=3)
   44   2                  RES_SET[index] = (FILTER->FILTER_LIST[index]-FILTER->MAX_LIST[index]-FILTER->MIN_LIST[index])
             -/(FILTER->times-2);
   45   2              else
   46   2                  RES_SET[index] = FILTER->FILTER_LIST[index];
   47   2          }
   48   1          EM_FILTER_INIT(FILTER);
   49   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       273     ------
  ecode size           =    ------     ------
C251 COMPILER V5.60.0,  EM_FILTER                                                          24/01/22  20:36:13  PAGE 2   

  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
