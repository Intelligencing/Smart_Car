C251 COMPILER V5.60.0,  EM_FILTER                                                          17/02/22  14:29:44  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE EM_FILTER
OBJECT MODULE PLACED IN .\Objects\EM_FILTER.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE CODE\ALGORITHM\EM_FILTER.c LARGE INTR2 BROWSE INCDIR(.\CODE\ALGORITHM;
                    -.\CODE\DRIVER;.\CODE\Libraries\libraries;.\CODE\Libraries\seekfree_libraries;.\CODE\Libraries\seekfree_peripheral;.\CODE
                    -\USER) DEBUG PRINT(.\Listings\EM_FILTER.lst) TABS(2) OBJECT(.\Objects\EM_FILTER.obj) 

stmt  level    source

    1          
    2          #include "EM_FILTER.h"
    3          #include "COMMON.h"
    4          
    5          #define EM_MAX -100000
    6          #define EM_MIN  100000
    7          
    8          void EM_FILTER_INIT(EM_FILTER* FILTER){
    9   1          int index;
   10   1          FILTER->times = 0;
   11   1          for(index = 0 ; index<LIST_LENGTH ; index++){
   12   2              FILTER->FILTER_LIST[index] = 0;
   13   2              FILTER->MAX_LIST[index] = EM_MAX;
*** WARNING C188 IN LINE 13 OF CODE\ALGORITHM\EM_FILTER.c: 'constant': value truncated
   14   2              FILTER->MIN_LIST[index] = EM_MIN;
*** WARNING C188 IN LINE 14 OF CODE\ALGORITHM\EM_FILTER.c: 'constant': value truncated
   15   2          }
   16   1      }
   17          
   18          void EM_FILTER_ADD_SAMPLE(EM_FILTER* FILTER,int* DATA_SAMPLE_LIST){
   19   1          int index,temp;
   20   1          for(index=0;index<LIST_LENGTH;index++){
   21   2              temp = DATA_SAMPLE_LIST[index];
   22   2              if(temp>FILTER->MAX_RANGE) temp = FILTER->MAX_RANGE;
   23   2              if(temp<FILTER->MIN_RANGE) temp = FILTER->MIN_RANGE;
   24   2              FILTER->MAX_LIST[index] = FILTER->MAX_LIST[index]<temp ? temp : FILTER->MAX_LIST[index];
   25   2              FILTER->MIN_LIST[index] = FILTER->MIN_LIST[index]>temp ? temp : FILTER->MIN_LIST[index];
   26   2              FILTER->FILTER_LIST[index] += temp;
   27   2          }
   28   1          FILTER->times++;
   29   1      }
   30          
   31          void EM_FILTER_READ_RESULT(EM_FILTER* FILTER,int* RES_SET){
   32   1          int index;
   33   1          for(index=0;index<LIST_LENGTH;index++){
   34   2              if(FILTER->times>=3)
   35   2                  RES_SET[index] = (FILTER->FILTER_LIST[index]-FILTER->MAX_LIST[index]-FILTER->MIN_LIST[index])
             -/(FILTER->times-2);
   36   2              else
   37   2                  RES_SET[index] = FILTER->FILTER_LIST[index];
   38   2          }
   39   1          EM_FILTER_INIT(FILTER);
   40   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       273     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
C251 COMPILER V5.60.0,  EM_FILTER                                                          17/02/22  14:29:44  PAGE 2   

  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
