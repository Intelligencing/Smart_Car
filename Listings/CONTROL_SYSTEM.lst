C251 COMPILER V5.60.0,  CONTROL_SYSTEM                                                     05/03/22  22:36:46  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE CONTROL_SYSTEM
OBJECT MODULE PLACED IN .\Objects\CONTROL_SYSTEM.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE CODE\USER\CONTROL_SYSTEM.c LARGE INTR2 BROWSE INCDIR(.\CODE\ALGORITHM;
                    -.\CODE\DRIVER;.\CODE\Libraries\libraries;.\CODE\Libraries\seekfree_libraries;.\CODE\Libraries\seekfree_peripheral;.\CODE
                    -\USER) DEBUG PRINT(.\Listings\CONTROL_SYSTEM.lst) TABS(2) OBJECT(.\Objects\CONTROL_SYSTEM.obj) 

stmt  level    source

    1          #include "CONTROL_SYSTEM.h"
    2          #include "SERVO_MOTOR_CONTROL.h"
    3          #include "STEP_MOTOR_CONTROL.h"
    4          #include "EM_SENSOR.h"
    5          #include "ENCODE_SENSOR.h"
    6          #include "LCD_show.h"
    7          #include "headfile.h"
    8          #include "common.h"
    9          
   10          #define SPEED 270
   11          
   12          CAR_STATUS CUR_STATUS;  //当前状态
   13          
   14          int DATA[4];  //电磁传感器数据存储列表
   15          int TARGET_SPEED;     //目标速度
   16          int CURRENT_SPEED;    //当前速度
   17          float ANGLE;          //舵机打角
   18          int RES;
   19          
   20          void (*func[7])();//函数指针数组，用于映射不同状态对应的函数
   21          int i,a;
   22          a=0;
   23          int SC_flag;//三叉路口标志位
   24          int flag;
   25          
   26          CAR_STATUS CAR_STATUS_JUDGE() {//状态判断
   27   1          float backup;//左右电感差值
   28   1          int huan_dw;//环岛标志位
   29   1            
   30   1        backup=(DATA[1]-DATA[2]>0 ? DATA[1]-DATA[2] : DATA[2]-DATA[1]);
   31   1          //分段PD
   32   1      //  if (DATA[0]<80&&DATA[3]<80)
   33   1      //    {
   34   1      //        SteeringPID_State(2);
   35   1      //        return INTO_CURVE;/* code */
   36   1      //    }
   37   1      //      //   /*三叉处理*/
   38   1      //   if(DATA[1]<500&&DATA[2]<500&&DATA[0]<600&&DATA[3]<600&&SC_flag==0&&flag==0){//入三叉
   39   1      //     SteeringControl(-8); 
   40   1      //      delay_ms(150);
   41   1      //     SC_flag=1;
   42   1      //   }
   43   1      //   if(DATA[1]>1000||DATA[2]>1000&&SC_flag==1&&flag==0){//出三叉
   44   1      //     flag=1;//已经进入一次
   45   1      //     SteeringControl(-8);
   46   1      //      delay_ms(150);
   47   1      //     SC_flag=0;
   48   1      //   }
   49   1      //   if(DATA[1]<500&&DATA[2]<500&&DATA[0]<600&& DATA[3]<600&&SC_flag==0&&flag==1){//入三叉
   50   1      //     SteeringControl(8);
   51   1      //      delay_ms(150);
   52   1      //     SC_flag=1;
   53   1      //   }
   54   1      //   if(DATA[1]>1000||DATA[2]>1000&&SC_flag==1&&flag==1){//出三叉
   55   1      //     flag=0;
   56   1      //     SteeringControl(8);
   57   1      //     delay_ms(150);
C251 COMPILER V5.60.0,  CONTROL_SYSTEM                                                     05/03/22  22:36:46  PAGE 2   

   58   1      //     SC_flag=0;
   59   1      //   }
   60   1         
   61   1          if(backup<=300&&a==0){
   62   2            return STRAIGHT;
   63   2          }
   64   1          /* * * 弯道处理 * * */
   65   1          if(300<backup&&backup<=600&&a==0){
   66   2              SteeringPID_State(1);
   67   2              return INTO_CURVE;
   68   2          }   
   69   1      //   if(backup>250){
   70   1      //        SteeringPID_State(2);
   71   1      //        return ON_CURVE;
   72   1      //   } 
   73   1         if(backup>600||a<=1){
   74   2              a++;
   75   2          if(a>1) a=0;
   76   2              SteeringPID_State(2);
   77   2              return ON_CURVE;
   78   2         } 
   79   1      
   80   1         
   81   1      //   /*十字路口处理*/
   82   1      //   if(DATA[0]>1000&&DATA[3]>1000&&DATA[1]>1000||DATA[2]>1000){
   83   1      //     SteeringControl(0);
   84   1      //   }
   85   1           /* * * 环岛处理 * * */ 
   86   1      //    if(DATA[1]>2000&&DATA[2]>2000&&DATA[3]>DATA[0]) {//环标志
   87   1      //      if(huan_dw==0) return INTO_CIRCLE;
   88   1      //         else {//防止再次入环
   89   1      //               huan_dw=0;
   90   1      //         }
   91   1      //      if((DATA[0]>90&&DATA[1]>90&&DATA[1]>=65&&
   92   1      //           DATA[1]<=70&&DATA[0]>=65&&DATA[0]<=70)   
   93   1      //           ||(DATA[0]>90&&DATA[1]>90&&DATA[1]>=65&&
   94   1      //              DATA[1]<=70&&DATA[0]>=65&&DATA[0]<70)) {//环标志
   95   1      //          if(huan_dw==0) return INTO_CIRCLE;
   96   1      //          else {//防止再次入环
   97   1      //              huan_dw=0;
   98   1      //          }
   99   1      //      }
  100   1        //  }
  101   1      }
*** WARNING C47 IN LINE 28 OF CODE\USER\CONTROL_SYSTEM.c: 'huan_dw': unreferenced local variable
  102          
  103          void SYS_INIT_ALL(){
  104   1          sys_clk=30000000;//时钟频率
  105   1          board_init();//固件初始化
  106   1          lcd_init();//显示屏初始化
  107   1          ISR_INIT();
  108   1          EnableGlobalIRQ();//中断初始化
  109   1      }
  110          
  111          void CONTROL_SYS_INIT(){
  112   1          //状态函数列表初始化
  113   1          func[0] = FUNC_STRAIGHT;
  114   1          func[1] = FUNC_INTO_CURVE;
  115   1          func[2] = FUNC_ON_CURVE;
  116   1          func[3] = FUNC_OUT_CURVE;
  117   1          func[4] = FUNC_INTO_CIRCLE;
  118   1          func[5] = FUNC_ON_CIRCLE;
  119   1          func[6] = FUNC_OUT_CIRCLE;
  120   1          
  121   1          EM_INIT();//电磁传感器初始化
  122   1          ENCODING_INIT();//编码器初始化
C251 COMPILER V5.60.0,  CONTROL_SYSTEM                                                     05/03/22  22:36:46  PAGE 3   

  123   1          StepMotorControl_INIT();//步进电机控制系统初始化
  124   1          SteeringControl_INIT();//舵机控制系统初始化
  125   1          lcd_clear(BLUE);
  126   1          lcd_clear(WHITE);//lcd刷新
  127   1          SC_flag=0;//三叉路口标志位
  128   1          flag=0;
  129   1      }
  130          
  131          void Data_update(){
  132   1          EM_READ(DATA);//读取数据
  133   1          LCD("L",DATA[0],0);//显示电感值
  134   1          LCD("LM",DATA[1],1);
  135   1          LCD("RM",DATA[2],2);
  136   1          LCD("R",DATA[3],3);
  137   1        //LCD("FLAG",SC_flag,4);//显示编码器读取数据
  138   1          LCD("SPEED",RES,4);//显示编码器读取数据
  139   1          RES = ENCODING_READ_RESULT();//编码器读取电机转速
  140   1      }
  141          
  142          void ControlSys() {
  143   1          //  ANGLE = SPEED(DATA, 0);
  144   1          //  StepMotorControl(RES,SPEED);
  145   1          //  SteeringControl(-ANGLE);
  146   1          CUR_STATUS = CAR_STATUS_JUDGE();
  147   1          LCD("STATU",CUR_STATUS,8);
  148   1          (*func[CUR_STATUS])();
  149   1      
  150   1          
  151   1      }
  152          
  153          //前进函数
  154          void FORWARD_FUNC(){
  155   1          float backup;//左右电感差值
  156   1          int TARGET_SPEED;
  157   1          ANGLE=ANGLE_GETANGLE(DATA,0);
  158   1          CURRENT_SPEED=ENCODING_READ_RESULT();//编码器计算当前速度
  159   1          backup=(DATA[1]-DATA[2]>0 ? DATA[1]-DATA[2] : DATA[1]-DATA[2]);
  160   1          TARGET_SPEED=300-(int)(backup*0.1);   //弯道最低+直道加速0.013
  161   1          //TARGET_SPEED=SPEED; //min_SPEED + (max_SPEED - min_SPEED)/10*ANGLE;
  162   1          //利用舵机打角角度，处理出速度目标值
  163   1          StepMotorControl(RES,TARGET_SPEED);//电机输出
  164   1          SteeringControl(-ANGLE);
  165   1      }
  166          
  167          //直线行驶状态函数实现
  168          void FUNC_STRAIGHT() {
  169   1          SteeringPID_State(ON_STRAIGHT);
  170   1          FORWARD_FUNC();
  171   1      }
  172          
  173          //入弯状态函数实现
  174          void FUNC_INTO_CURVE(){
  175   1          SteeringPID_State(ON_TURN);
  176   1          FORWARD_FUNC();
  177   1          CUR_STATUS = ON_CURVE;
  178   1      }
  179          
  180          //在弯道中状态函数实现
  181          void FUNC_ON_CURVE(){
  182   1          FORWARD_FUNC();
  183   1      }
  184          
  185          //出弯状态函数实现
  186          void FUNC_OUT_CURVE(){
  187   1          SteeringPID_State(ON_STRAIGHT);
  188   1          FORWARD_FUNC();
C251 COMPILER V5.60.0,  CONTROL_SYSTEM                                                     05/03/22  22:36:46  PAGE 4   

  189   1          CUR_STATUS = STRAIGHT;
  190   1      }
  191          
  192          //入环状态函数实现
  193          void FUNC_INTO_CIRCLE(){
  194   1          SteeringPID_State(ON_TURN);
  195   1          delay_ms(1000);
  196   1          SteeringControl(10);
  197   1          delay_ms(1000);
  198   1          CUR_STATUS = ON_CIRCLE;
  199   1      }
  200          
  201          //在环岛中状态函数实现
  202          void FUNC_ON_CIRCLE(){
  203   1          FORWARD_FUNC();
  204   1      }
  205          
  206          //出环状态函数实现
  207          void FUNC_OUT_CIRCLE(){
  208   1          SteeringPID_State(ON_STRAIGHT);
  209   1          FORWARD_FUNC();
  210   1          delay_ms(1000);
  211   1          CUR_STATUS = STRAIGHT;
  212   1      }
  213          
*** WARNING C180 IN LINE 78 OF CODE\USER\CONTROL_SYSTEM.c: 'CAR_STATUS_JUDGE': not every path returns a value
*** WARNING C180 IN LINE 78 OF CODE\USER\CONTROL_SYSTEM.c: 'CAR_STATUS_JUDGE': not every path returns a value


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       693     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        42     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        29     ------
End of Module Information.


C251 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
