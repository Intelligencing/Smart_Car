C251 COMPILER V5.60.0,  CONTROL_SYSTEM                                                     27/02/22  21:58:59  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE CONTROL_SYSTEM
OBJECT MODULE PLACED IN .\Objects\CONTROL_SYSTEM.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE CODE\USER\CONTROL_SYSTEM.c LARGE INTR2 BROWSE INCDIR(.\CODE\ALGORITHM;
                    -.\CODE\DRIVER;.\CODE\Libraries\libraries;.\CODE\Libraries\seekfree_libraries;.\CODE\Libraries\seekfree_peripheral;.\CODE
                    -\USER) DEBUG PRINT(.\Listings\CONTROL_SYSTEM.lst) TABS(2) OBJECT(.\Objects\CONTROL_SYSTEM.obj) 

stmt  level    source

    1          #include "CONTROL_SYSTEM.h"
    2          #include "SERVO_MOTOR_CONTROL.h"
    3          #include "STEP_MOTOR_CONTROL.h"
    4          #include "EM_SENSOR.h"
    5          #include "ENCODE_SENSOR.h"
    6          #include "LCD_show.h"
    7          #include "headfile.h"
    8          
    9          #define SPEED 270
   10          
   11          CAR_STATUS CUR_STATUS;  //当前状态
   12          
   13          int DATA[4];  //电磁传感器数据存储列表
   14          int TARGET_SPEED;     //目标速度
   15          int CURRENT_SPEED;    //当前速度
   16          float ANGLE;          //舵机打角
   17          int RES;
   18          
   19          void (*func[7])();//函数指针数组，用于映射不同状态对应的函数
   20          int i,a;
   21          i=0;
   22          a=0;
   23          CAR_STATUS CAR_STATUS_JUDGE() {//状态判断
   24   1          float backup;//左右电感差值
   25   1          int huan_dw;//环岛标志位
   26   1          int TARGET_SPEED;
   27   1        
   28   1        backup=(DATA[0]-DATA[3]>0 ? DATA[0]-DATA[3] : DATA[3]-DATA[0]);
   29   1          //分段PD
   30   1      //  if (DATA[0]<80&&DATA[3]<80)
   31   1      //    {
   32   1      //        SteeringPID_State(2);
   33   1      //        return INTO_CURVE;/* code */
   34   1      //    }
   35   1              
   36   1          if(backup<=100&&a==0){
   37   2            return STRAIGHT;
   38   2          }
   39   1          /* * * 弯道处理 * * */
   40   1          if(100<backup&&backup<=300&&a==0){
   41   2              SteeringPID_State(1);
   42   2              return INTO_CURVE;
   43   2          }   
   44   1      //   if(backup>250){
   45   1      //        SteeringPID_State(2);
   46   1      //        return ON_CURVE;
   47   1      //   } 
   48   1         if(backup>300||a<=30){
   49   2              a++;
   50   2          if(a>30) a=0;
   51   2              SteeringPID_State(2);
   52   2              return ON_CURVE;
   53   2         } 
   54   1           /* * * 环岛处理 * * */ 
   55   1      
   56   1          //  if(DATA[1]>1650&&DATA[2]>1650&&DATA[3]<700&&DATA[0]<700) {//环标志
   57   1              // if(huan_dw==0) return INTO_CIRCLE;
C251 COMPILER V5.60.0,  CONTROL_SYSTEM                                                     27/02/22  21:58:59  PAGE 2   

   58   1              // else {//防止再次入环
   59   1              //     huan_dw=0;
   60   1              // }
   61   1      
   62   1      //    if((DATA[0]>90&&DATA[1]>90&&DATA[1]>=65&&
   63   1      //         DATA[1]<=70&&DATA[0]>=65&&DATA[0]<=70)   
   64   1      //         ||(DATA[0]>90&&DATA[1]>90&&DATA[1]>=65&&
   65   1      //            DATA[1]<=70&&DATA[0]>=65&&DATA[0]<70)) {//环标志
   66   1      //        if(huan_dw==0) return INTO_CIRCLE;
   67   1      //        else {//防止再次入环
   68   1      //            huan_dw=0;
   69   1       //       }
   70   1      //    }
   71   1      }
*** WARNING C47 IN LINE 25 OF CODE\USER\CONTROL_SYSTEM.c: 'huan_dw': unreferenced local variable
*** WARNING C47 IN LINE 26 OF CODE\USER\CONTROL_SYSTEM.c: 'TARGET_SPEED': unreferenced local variable
   72          
   73          void SYS_INIT_ALL(){
   74   1          sys_clk=30000000;//时钟频率
   75   1          board_init();//固件初始化
   76   1          lcd_init();//显示屏初始化
   77   1          ISR_INIT();
   78   1          EnableGlobalIRQ();//中断初始化
   79   1      }
   80          
   81          void CONTROL_SYS_INIT(){
   82   1          //状态函数列表初始化
   83   1          func[0] = FUNC_STRAIGHT;
   84   1          func[1] = FUNC_INTO_CURVE;
   85   1          func[2] = FUNC_ON_CURVE;
   86   1          func[3] = FUNC_OUT_CURVE;
   87   1          func[4] = FUNC_INTO_CIRCLE;
   88   1          func[5] = FUNC_ON_CIRCLE;
   89   1          func[6] = FUNC_OUT_CIRCLE;
   90   1          
   91   1          EM_INIT();//电磁传感器初始化
   92   1          ENCODING_INIT();//编码器初始化
   93   1          StepMotorControl_INIT();//步进电机控制系统初始化
   94   1          SteeringControl_INIT();//舵机控制系统初始化
   95   1          lcd_clear(BLUE);
   96   1          lcd_clear(WHITE);//lcd刷新
   97   1      }
   98          
   99          void Data_update(){
  100   1          EM_READ(DATA);//读取数据
  101   1          LCD("L",DATA[0],0);//显示电感值
  102   1          LCD("LM",DATA[1],1);
  103   1          LCD("RM",DATA[2],2);
  104   1          LCD("R",DATA[3],3);
  105   1          LCD("SPEED",RES,4);//显示编码器读取数据
  106   1          RES = ENCODING_READ_RESULT();//编码器读取电机转速
  107   1      }
  108          
  109          void ControlSys() {
  110   1          //  ANGLE = SPEED(DATA, 0);
  111   1          //  StepMotorControl(RES,SPEED);
  112   1          //  SteeringControl(-ANGLE);
  113   1          CUR_STATUS = CAR_STATUS_JUDGE();
  114   1          LCD("STATU",CUR_STATUS,8);
  115   1          (*func[CUR_STATUS])();
  116   1      
  117   1          
  118   1      }
  119          
  120          //前进函数
  121          void FORWARD_FUNC(){
C251 COMPILER V5.60.0,  CONTROL_SYSTEM                                                     27/02/22  21:58:59  PAGE 3   

  122   1          float backup;//左右电感差值
  123   1          int TARGET_SPEED;
  124   1          ANGLE=ANGLE_GETANGLE(DATA,0);
  125   1          CURRENT_SPEED=ENCODING_READ_RESULT();//编码器计算当前速度
  126   1          backup=(DATA[1]-DATA[2]>0 ? DATA[1]-DATA[2] : DATA[2]-DATA[1]);
  127   1          TARGET_SPEED=375-(int)(backup*0.13 );   //弯道最低+直道加速
  128   1          //TARGET_SPEED=SPEED; //min_SPEED + (max_SPEED - min_SPEED)/10*ANGLE;
  129   1          //利用舵机打角角度，处理出速度目标值
  130   1          StepMotorControl(RES,TARGET_SPEED);//电机输出
  131   1          SteeringControl(-ANGLE);
  132   1      }
  133          
  134          //直线行驶状态函数实现
  135          void FUNC_STRAIGHT() {
  136   1          SteeringPID_State(ON_STRAIGHT);
  137   1          FORWARD_FUNC();
  138   1      }
  139          
  140          //入弯状态函数实现
  141          void FUNC_INTO_CURVE(){
  142   1          SteeringPID_State(ON_TURN);
  143   1          FORWARD_FUNC();
  144   1          CUR_STATUS = ON_CURVE;
  145   1      }
  146          
  147          //在弯道中状态函数实现
  148          void FUNC_ON_CURVE(){
  149   1          FORWARD_FUNC();
  150   1      }
  151          
  152          //出弯状态函数实现
  153          void FUNC_OUT_CURVE(){
  154   1          SteeringPID_State(ON_STRAIGHT);
  155   1          FORWARD_FUNC();
  156   1          CUR_STATUS = STRAIGHT;
  157   1      }
  158          
  159          //入环状态函数实现
  160          void FUNC_INTO_CIRCLE(){
  161   1          SteeringPID_State(ON_TURN);
  162   1          delay_ms(1000);
  163   1          SteeringControl(10);
  164   1          delay_ms(1000);
  165   1          CUR_STATUS = ON_CIRCLE;
  166   1      }
  167          
  168          //在环岛中状态函数实现
  169          void FUNC_ON_CIRCLE(){
  170   1          FORWARD_FUNC();
  171   1      }
  172          
  173          //出环状态函数实现
  174          void FUNC_OUT_CIRCLE(){
  175   1          SteeringPID_State(ON_STRAIGHT);
  176   1          FORWARD_FUNC();
  177   1          delay_ms(1000);
  178   1          CUR_STATUS = STRAIGHT;
  179   1      }
  180          
*** WARNING C180 IN LINE 53 OF CODE\USER\CONTROL_SYSTEM.c: 'CAR_STATUS_JUDGE': not every path returns a value
*** WARNING C180 IN LINE 53 OF CODE\USER\CONTROL_SYSTEM.c: 'CAR_STATUS_JUDGE': not every path returns a value


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       682     ------
  ecode size           =    ------     ------
C251 COMPILER V5.60.0,  CONTROL_SYSTEM                                                     27/02/22  21:58:59  PAGE 4   

  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        38     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        36     ------
End of Module Information.


C251 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
