C251 COMPILER V5.60.0,  CONTROL_SYSTEM                                                     17/02/22  14:35:33  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE CONTROL_SYSTEM
OBJECT MODULE PLACED IN .\Objects\CONTROL_SYSTEM.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE CODE\USER\CONTROL_SYSTEM.c LARGE INTR2 BROWSE INCDIR(.\CODE\ALGORITHM;
                    -.\CODE\DRIVER;.\CODE\Libraries\libraries;.\CODE\Libraries\seekfree_libraries;.\CODE\Libraries\seekfree_peripheral;.\CODE
                    -\USER) DEBUG PRINT(.\Listings\CONTROL_SYSTEM.lst) TABS(2) OBJECT(.\Objects\CONTROL_SYSTEM.obj) 

stmt  level    source

    1          #include "CONTROL_SYSTEM.h"
    2          #include "SERVO_MOTOR_CONTROL.h"
    3          #include "STEP_MOTOR_CONTROL.h"
    4          #include "EM_SENSOR.h"
    5          #include "ENCODE_SENSOR.h"
    6          #include "LCD_show.h"
    7          #include "headfile.h"
    8          
    9          #define SPEED 400
   10          
   11          CAR_STATUS CUR_STATUS;  //当前状态
   12          
   13          int DATA[4];  //电磁传感器数据存储列表
   14          int TARGET_SPEED;     //目标速度
   15          int CURRENT_SPEED;    //当前速度
   16          float ANGLE;          //舵机打角
   17          int RES;
   18          
   19          void (*func[7])();//函数指针数组，用于映射不同状态对应的函数
   20          
   21          CAR_STATUS CAR_STATUS_JUDGE() {//状态判断
   22   1          float backup;//左右电感差值
   23   1          int TARGET_SPEED;
   24   1          int huan_dw;//环岛标志位
   25   1      
   26   1          if((DATA[0]-DATA[3])>0)  backup=DATA[0]-DATA[3];
   27   1          if((DATA[0]-DATA[3])<0)  backup=DATA[3]-DATA[1];
   28   1          TARGET_SPEED=430-(int)(backup*1.2);   //弯道最低+直道加速
   29   1          //分段PD
   30   1          if(backup<=50)     return STRAIGHT;
   31   1          /* * * 弯道处理 * * */
   32   1          if(50<backup<=200){
   33   2              SteeringPID_State(2);
   34   2              return ON_CURVE;
   35   2          }   
   36   1          if(200<backup){
   37   2               SteeringPID_State(3);
   38   2               return ON_CURVE;
   39   2          } 
   40   1           /* * * 环岛处理 * * */      
   41   1          if((DATA[0]>90&&DATA[1]>90&&DATA[1]>=65&&
   42   1               DATA[1]<=70&&DATA[0]>=65&&DATA[0]<=70)   
   43   1               ||(DATA[0]>90&&DATA[1]>90&&DATA[1]>=65&&
   44   1                  DATA[1]<=70&&DATA[0]>=65&&DATA[0]<70)) {//环标志
   45   2              if(huan_dw==0) return INTO_CIRCLE;
   46   2              else {//防止再次入环
   47   3                  huan_dw=0;
   48   3              }
   49   2          }
   50   1      }
   51          
   52          void SYS_INIT_ALL(){
   53   1          sys_clk=30000000;//时钟频率
   54   1          board_init();//固件初始化
   55   1          lcd_init();//显示屏初始化
   56   1          ISR_INIT();
   57   1          EnableGlobalIRQ();//中断初始化
C251 COMPILER V5.60.0,  CONTROL_SYSTEM                                                     17/02/22  14:35:33  PAGE 2   

   58   1      }
   59          
   60          void CONTROL_SYS_INIT(){
   61   1          //状态函数列表初始化
   62   1          func[0] = FUNC_STRAIGHT;
   63   1          func[1] = FUNC_INTO_CURVE;
   64   1          func[2] = FUNC_ON_CURVE;
   65   1          func[3] = FUNC_OUT_CURVE;
   66   1          func[4] = FUNC_INTO_CIRCLE;
   67   1          func[5] = FUNC_ON_CIRCLE;
   68   1          func[6] = FUNC_OUT_CIRCLE;
   69   1          
   70   1          EM_INIT();//电磁传感器初始化
   71   1          ENCODING_INIT();//编码器初始化
   72   1          StepMotorControl_INIT();//步进电机控制系统初始化
   73   1          SteeringControl_INIT();//舵机控制系统初始化
   74   1          lcd_clear(BLUE);
   75   1          lcd_clear(WHITE);//lcd刷新
   76   1      }
   77          
   78          void Data_update(){
   79   1          EM_READ(DATA);//读取数据
   80   1          LCD("L",DATA[0],0);//显示电感值
   81   1          LCD("LM",DATA[1],1);
   82   1          LCD("RM",DATA[2],2);
   83   1          LCD("R",DATA[3],3);
   84   1          LCD("SPEED",RES,4);//显示编码器读取数据
   85   1          RES = ENCODING_READ_RESULT();//编码器读取电机转速
   86   1      }
   87          
   88          void ControlSys() {
   89   1          //  ANGLE = SPEED(DATA, 0);
   90   1          //  StepMotorControl(RES,SPEED);
   91   1          //  SteeringControl(-ANGLE);
   92   1          CUR_STATUS = CAR_STATUS_JUDGE();
   93   1          //LCD("STATU",CUR_STATUS,8);
   94   1          (*func[CUR_STATUS])();
   95   1      }
   96          
   97          //前进函数
   98          void FORWARD_FUNC(){
   99   1          ANGLE=ANGLE_GETANGLE(DATA,0);
  100   1          CURRENT_SPEED=ENCODING_READ_RESULT();//编码器计算当前速度
  101   1          TARGET_SPEED=SPEED; //min_SPEED + (max_SPEED - min_SPEED)/10*ANGLE;
  102   1          //利用舵机打角角度，处理出速度目标值
  103   1          StepMotorControl(RES,TARGET_SPEED);//电机输出
  104   1          SteeringControl(-ANGLE);
  105   1      }
  106          
  107          //直线行驶状态函数实现
  108          void FUNC_STRAIGHT() {
  109   1          SteeringPID_State(ON_STRAIGHT);
  110   1          FORWARD_FUNC();
  111   1      }
  112          
  113          //入弯状态函数实现
  114          void FUNC_INTO_CURVE(){
  115   1          SteeringPID_State(ON_TURN);
  116   1          FORWARD_FUNC();
  117   1          CUR_STATUS = ON_CURVE;
  118   1      }
  119          
  120          //在弯道中状态函数实现
  121          void FUNC_ON_CURVE(){
  122   1          FORWARD_FUNC();
  123   1      }
C251 COMPILER V5.60.0,  CONTROL_SYSTEM                                                     17/02/22  14:35:33  PAGE 3   

  124          
  125          //出弯状态函数实现
  126          void FUNC_OUT_CURVE(){
  127   1          SteeringPID_State(ON_STRAIGHT);
  128   1          FORWARD_FUNC();
  129   1          CUR_STATUS = STRAIGHT;
  130   1      }
  131          
  132          //入环状态函数实现
  133          void FUNC_INTO_CIRCLE(){
  134   1          SteeringPID_State(ON_TURN);
  135   1          SteeringControl(10);
  136   1          delay_ms(1000);
  137   1          CUR_STATUS = ON_CIRCLE;
  138   1      }
  139          
  140          //在环岛中状态函数实现
  141          void FUNC_ON_CIRCLE(){
  142   1          FORWARD_FUNC();
  143   1      }
  144          
  145          //出环状态函数实现
  146          void FUNC_OUT_CIRCLE(){
  147   1          SteeringPID_State(ON_STRAIGHT);
  148   1          FORWARD_FUNC();
  149   1          delay_ms(1000);
  150   1          CUR_STATUS = STRAIGHT;
  151   1      }
  152          
*** WARNING C180 IN LINE 49 OF CODE\USER\CONTROL_SYSTEM.c: 'CAR_STATUS_JUDGE': not every path returns a value
*** WARNING C180 IN LINE 49 OF CODE\USER\CONTROL_SYSTEM.c: 'CAR_STATUS_JUDGE': not every path returns a value


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       707     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        34          2
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        16     ------
End of Module Information.


C251 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
