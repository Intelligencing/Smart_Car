C251 COMPILER V5.60.0,  STEP_MOTOR_CONTROL                                                 24/01/22  11:39:22  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STEP_MOTOR_CONTROL
OBJECT MODULE PLACED IN .\Objects\STEP_MOTOR_CONTROL.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE CODE\USER\STEP_MOTOR_CONTROL.C LARGE INTR2 BROWSE INCDIR(.\CODE\ALGORI
                    -THM;.\CODE\DRIVER;.\CODE\Libraries\libraries;.\CODE\Libraries\seekfree_libraries;.\CODE\Libraries\seekfree_peripheral;.\
                    -CODE\USER) DEBUG PRINT(.\Listings\STEP_MOTOR_CONTROL.lst) TABS(2) OBJECT(.\Objects\STEP_MOTOR_CONTROL.obj) 

stmt  level    source

    1          #include "STEP_MOTOR_CONTROL.h"
    2          
    3          #define ERROR_RANGE 1
    4          #define STEERING_Kp 0.5
    5          #define STEERING_Ki 0.3
    6          #define STEERING_Kd 0.07
    7          #define STEP_MOTOR_MAX_DUTY 5000
    8          #define MOTOR_MAX_PWM(speed) speed + 4000
    9          
   10          STATUS_FLAG FLAG;
   11          STEP_MOTOR STEP_MOTOR_L;
   12          PID STEP_MOTOR_PID;
   13          
   14          void STEP_MOTOR_PID_INIT(){
   15   1          PID_INIT_NEWPID(&STEP_MOTOR_PID,STEERING_Kp,STEERING_Ki,STEERING_Kd,0,PID_REALIZE_MODE);
   16   1          FLAG = OFF;
   17   1      }
   18          
   19          int STEP_MOTOR_CONTROL(uint16 CURRENT_SPEED,uint16 TARGET_SPEED){
   20   1          // if(CURRENT_SPEED>0 && FLAG == OFF) FLAG = ON;
   21   1          // if (CURRENT_SPEED==0 && FLAG == ON || CURRENT_SPEED - TARGET_SPEED > ERROR_RANGE) {
   22   1          //     STEP_MOTOR_STOP();
   23   1          // }
   24   1          // else if(CURRENT_SPEED - TARGET_SPEED <ERROR_RANGE){
   25   1          //     STEP_MOTOR_FORWORD(STEP_MOTOR_MAX_DUTY);
   26   1          // }
   27   1          // else{
   28   1          //     PID_SET_TARGET(&STEP_MOTOR_PID,TARGET_SPEED);
   29   1          //     STEP_MOTOR_FORWORD(PID_CALC_RESULT(&STEP_MOTOR_PID,CURRENT_SPEED));
   30   1          // }
   31   1          int delta;
   32   1          int max_pwm;
   33   1          max_pwm = MOTOR_MAX_PWM(CURRENT_SPEED);
   34   1          PID_SET_TARGET(&STEP_MOTOR_PID,TARGET_SPEED);
   35   1          delta = PID_CALC_RESULT(&STEP_MOTOR_PID,CURRENT_SPEED);
   36   1          STEP_MOTOR_L.CURRENT_PWM_DUTY = STEP_MOTOR_L.CURRENT_PWM_DUTY +delta ;
   37   1          if(STEP_MOTOR_L.CURRENT_PWM_DUTY > max_pwm) STEP_MOTOR_L.CURRENT_PWM_DUTY = max_pwm;
   38   1          if(STEP_MOTOR_L.CURRENT_PWM_DUTY < 0) STEP_MOTOR_L.CURRENT_PWM_DUTY = 0;
   39   1          STEP_MOTOR_FORWORD(delta);
   40   1          LCD_display("V",CURRENT_SPEED,1);
   41   1          LCD_display("delta",delta,2);
   42   1          LCD_display("PWM",STEP_MOTOR_L.CURRENT_PWM_DUTY,0);
   43   1          
   44   1          return delta;
   45   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       242     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        38          2
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
C251 COMPILER V5.60.0,  STEP_MOTOR_CONTROL                                                 24/01/22  11:39:22  PAGE 2   

  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        12     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
